name: Deploy static site to GitHub Pages

on:
  push:
    branches: [main]          # rebuild Pages whenever main is updated
  workflow_dispatch:          # allow manual re-deploys

permissions:                  # least-privilege matrix for GitHub Pages
  contents: read              # required by actions/checkout
  pages: write                # publish to gh-pages
  id-token: write             # verify deployment with OIDC

concurrency:                  # cancel previous deployments from the same ref
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:            # ðŸ‘ˆ required by GitHub Pages
      name: github-pages    # must be this exact string
      url: ${{ steps.deployment.outputs.page_url }} # optional â€“ surfaces link in UI

    steps:
      # 1. Checkout source
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. (Optional) build step
      #    Uncomment if you need to produce /public with a build tool.
      # - name: Install dependencies & build
      #   run: |
      #     npm ci
      #     npm run build

      # 3. Guarantee static assets live at ./public
      #    If you already commit them, nothing happens.
      - name: Assert public directory exists
        run: test -d public

      # 4. Upload ./public as the artifact for Pages
      - name: Upload static content
        uses: actions/upload-pages-artifact@v3
        with:
          path: public          # everything below public/ will be preserved
          retention-days: 1     # artifact only needed until deployment

      # 5. Publish to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment          # exposes 'deployment-url' output

      # 6. (Optional) Print the live URL
      - name: Show live URL
        run: |
          echo "âœ… Site is live at: ${{ steps.deployment.outputs.page_url }}"